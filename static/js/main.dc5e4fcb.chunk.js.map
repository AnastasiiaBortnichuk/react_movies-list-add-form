{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","error","handleChange","event","target","name","value","setState","trimLeft","handleSubmit","preventDefault","props","handleAddMovie","this","onSubmit","htmlFor","type","id","placeholder","onChange","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc5e4fcb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value.trimLeft(),\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (!title || !description || !imgUrl || !imdbUrl || !imdbId) {\n      this.setState({\n        error: true,\n      });\n\n      return;\n    }\n\n    this.props.handleAddMovie({\n      title, description, imgUrl, imdbUrl, imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      error: false,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      error,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"form__title\">Add new movie here</h2>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Input movie title\"\n          onChange={this.handleChange}\n        />\n\n        <label htmlFor=\"description\">Description</label>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          id=\"description\"\n          name=\"description\"\n          value={description}\n          placeholder=\"Describe the movie\"\n          onChange={this.handleChange}\n        />\n\n        <label htmlFor=\"imgUrl\">Img Url</label>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          id=\"imgUrl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"Link for picture\"\n          onChange={this.handleChange}\n        />\n\n        <label htmlFor=\"imdbUrl\">Imdb Url</label>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          id=\"imdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"Place for IMDb link\"\n          onChange={this.handleChange}\n        />\n\n        <label htmlFor=\"imdbId\">Imdb Id</label>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          id=\"imdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"Type IMDb id here\"\n          onChange={this.handleChange}\n        />\n\n        {error && (\n          <span className=\"form__error\">\n            All fields must be filled\n          </span>\n        )}\n\n        <button type=\"submit\" className=\"form__button\">\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  handleAddMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie handleAddMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}